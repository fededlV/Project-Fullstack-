{"ast":null,"code":"import axios from \"axios\";\nconst url = \"http://localhost:3001/gestionEscolar/profesores\";\nconst getProfesores = async () => {\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener los profesores: \", error);\n    throw error;\n  }\n};\nconst getProfesor = async profesorId => {\n  try {\n    console.log(profesorId);\n    const response = await axios.get(`${url}/${profesorId}`);\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // El servidor respondió con un código de estado diferente a 2xx\n      console.error(\"Error response data:\", error.response.data);\n      console.error(\"Error response status:\", error.response.status);\n      console.error(\"Error response headers:\", error.response.headers);\n      return null;\n    } else if (error.request) {\n      // La solicitud fue hecha pero no se recibió respuesta\n      console.error(\"Error request:\", error.request);\n    } else {\n      // Algo sucedió al configurar la solicitud que provocó un error\n      console.error(\"Error message:\", error.message);\n    }\n    throw error;\n  }\n};\nconst getNomProfesor = async profesorNombre => {\n  try {\n    const response = await axios.get(`${url}?nombre=${profesorNombre}`);\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // El servidor respondió con un código de estado diferente a 2xx\n      console.error(\"Error response data:\", error.response.data);\n      console.error(\"Error response status:\", error.response.status);\n      console.error(\"Error response headers:\", error.response.headers);\n      return null;\n    } else if (error.request) {\n      // La solicitud fue hecha pero no se recibió respuesta\n      console.error(\"Error request:\", error.request);\n    } else {\n      // Algo sucedió al configurar la solicitud que provocó un error\n      console.error(\"Error message:\", error.message);\n    }\n    throw error;\n  }\n};\nconst createProfesor = async profesor => {\n  try {\n    const response = await axios.post(url, profesor, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al crear el profesor: \", error);\n    throw error;\n  }\n};\nconst updateProfesor = async (id, profesor) => {\n  try {\n    const response = await axios.put(`${url}/${id}`, profesor, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al actualizar el profesor: \", error);\n    throw error;\n  }\n};\nconst deleteProfesor = async profesorId => {\n  try {\n    console.log(\"Se intenta eliminar el profesor con id: \", profesorId);\n    await axios.delete(`${url}/${profesorId}`);\n  } catch (error) {\n    console.error(\"Error al eliminar el profesor: \", error);\n    throw error;\n  }\n};\nconst profesoresService = {\n  getProfesores,\n  getProfesor,\n  getNomProfesor,\n  createProfesor,\n  updateProfesor,\n  deleteProfesor\n};\nexport default profesoresService;","map":{"version":3,"names":["axios","url","getProfesores","response","get","data","error","console","getProfesor","profesorId","log","status","headers","request","message","getNomProfesor","profesorNombre","createProfesor","profesor","post","updateProfesor","id","put","deleteProfesor","delete","profesoresService"],"sources":["C:/Mis Archivos/Cursos Programacion/Desarrollo-de-Software-/Fullstack Gestion Escolar/fullstack-gestion-escolar/frontend/src/services/profesores.service.js"],"sourcesContent":["import axios from \"axios\";\r\nconst url = \"http://localhost:3001/gestionEscolar/profesores\";\r\n\r\nconst getProfesores = async () => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al obtener los profesores: \", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst getProfesor = async (profesorId) => {\r\n  try {\r\n    console.log(profesorId);\r\n    const response = await axios.get(`${url}/${profesorId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error.response) {\r\n      // El servidor respondió con un código de estado diferente a 2xx\r\n      console.error(\"Error response data:\", error.response.data);\r\n      console.error(\"Error response status:\", error.response.status);\r\n      console.error(\"Error response headers:\", error.response.headers);\r\n      return null;\r\n    } else if (error.request) {\r\n      // La solicitud fue hecha pero no se recibió respuesta\r\n      console.error(\"Error request:\", error.request);\r\n    } else {\r\n      // Algo sucedió al configurar la solicitud que provocó un error\r\n      console.error(\"Error message:\", error.message);\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst getNomProfesor = async (profesorNombre) => {\r\n  try {\r\n    const response = await axios.get(`${url}?nombre=${profesorNombre}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error.response) {\r\n      // El servidor respondió con un código de estado diferente a 2xx\r\n      console.error(\"Error response data:\", error.response.data);\r\n      console.error(\"Error response status:\", error.response.status);\r\n      console.error(\"Error response headers:\", error.response.headers);\r\n      return null;\r\n    } else if (error.request) {\r\n      // La solicitud fue hecha pero no se recibió respuesta\r\n      console.error(\"Error request:\", error.request);\r\n    } else {\r\n      // Algo sucedió al configurar la solicitud que provocó un error\r\n      console.error(\"Error message:\", error.message);\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst createProfesor = async (profesor) => {\r\n  try {\r\n    const response = await axios.post(url, profesor, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al crear el profesor: \", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\nconst updateProfesor = async (id, profesor) => {\r\n  try {\r\n    const response = await axios.put(`${url}/${id}`, profesor, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al actualizar el profesor: \", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst deleteProfesor = async (profesorId) => {\r\n  try {\r\n    console.log(\"Se intenta eliminar el profesor con id: \", profesorId);\r\n    await axios.delete(`${url}/${profesorId}`);\r\n  } catch (error) {\r\n    console.error(\"Error al eliminar el profesor: \", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst profesoresService = {\r\n  getProfesores,\r\n  getProfesor,\r\n  getNomProfesor,\r\n  createProfesor,\r\n  updateProfesor,\r\n  deleteProfesor,\r\n};\r\n\r\nexport default profesoresService;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}