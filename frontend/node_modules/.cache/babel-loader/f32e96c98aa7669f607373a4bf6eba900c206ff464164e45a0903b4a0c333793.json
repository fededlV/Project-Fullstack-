{"ast":null,"code":"import axios from \"axios\";\nconst url = \"http://localhost:3001/gestionEscolar/horarios\";\nconst getHorarios = async () => {\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener los horarios: \", error);\n    throw error;\n  }\n};\n\n//Obtener todos los horarios y un horario filtrado por día\nconst getHorarioDia = async dia => {\n  try {\n    const response = await axios.get(`${url}/?dia=${dia}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener el horario: \", error);\n    throw error;\n  }\n};\nconst getHorario = async idAsig => {\n  //solo uno\n  try {\n    const response = await axios.get(`${url}/${idAsig}`);\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // El servidor respondió con un código de estado diferente a 2xx\n      console.error(\"Error response data:\", error.response.data);\n      console.error(\"Error response status:\", error.response.status);\n      console.error(\"Error response headers:\", error.response.headers);\n      return null;\n    } else if (error.request) {\n      // La solicitud fue hecha pero no se recibió respuesta\n      console.error(\"Error request:\", error.request);\n    } else {\n      // Algo sucedió al configurar la solicitud que provocó un error\n      console.error(\"Error message:\", error.message);\n    }\n    throw error;\n  }\n};\nconst createHorario = async horario => {\n  try {\n    const response = await axios.post(url, horario, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al crear el horario: \", error);\n    throw error;\n  }\n};\nconst updateHorario = async (id, horario) => {\n  try {\n    const response = await axios.put(`${url}/${id}`, horario, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al actualizar el horario: \", error);\n    throw error;\n  }\n};\nconst deleteHorario = async horarioId => {\n  try {\n    console.log(\"Se intenta eliminar el horario con id: \", horarioId);\n    await axios.delete(`${url}/${horarioId}`);\n  } catch (error) {\n    console.error(\"Error al eliminar el horario: \", error);\n    throw error;\n  }\n};\nconst horarioService = {\n  getHorarios,\n  getHorario,\n  getHorarioDia,\n  createHorario,\n  updateHorario,\n  deleteHorario\n};\nexport default horarioService;","map":{"version":3,"names":["axios","url","getHorarios","response","get","data","error","console","getHorarioDia","dia","getHorario","idAsig","status","headers","request","message","createHorario","horario","post","updateHorario","id","put","deleteHorario","horarioId","log","delete","horarioService"],"sources":["C:/Mis Archivos/Cursos Programacion/Desarrollo-de-Software-/Fullstack Gestion Escolar/fullstack-gestion-escolar/frontend/src/services/horarios.service.js"],"sourcesContent":["import axios from \"axios\";\r\nconst url = \"http://localhost:3001/gestionEscolar/horarios\";\r\n\r\nconst getHorarios = async () => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al obtener los horarios: \", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n//Obtener todos los horarios y un horario filtrado por día\r\nconst getHorarioDia = async (dia) => {\r\n  try {\r\n    const response = await axios.get(`${url}/?dia=${dia}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al obtener el horario: \", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nconst getHorario = async (idAsig) => { //solo uno\r\n  try {\r\n    const response = await axios.get(`${url}/${idAsig}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error.response) {\r\n      // El servidor respondió con un código de estado diferente a 2xx\r\n      console.error(\"Error response data:\", error.response.data);\r\n      console.error(\"Error response status:\", error.response.status);\r\n      console.error(\"Error response headers:\", error.response.headers);\r\n      return null \r\n    } else if (error.request) {\r\n      // La solicitud fue hecha pero no se recibió respuesta\r\n      console.error(\"Error request:\", error.request);\r\n    } else {\r\n      // Algo sucedió al configurar la solicitud que provocó un error\r\n      console.error(\"Error message:\", error.message);\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst createHorario = async (horario) => {\r\n  try {\r\n    const response = await axios.post(url, horario, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al crear el horario: \", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst updateHorario = async (id, horario) => {\r\n  try {\r\n    const response = await axios.put(`${url}/${id}`, horario, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al actualizar el horario: \", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst deleteHorario = async (horarioId) => {\r\n  try {\r\n    console.log(\"Se intenta eliminar el horario con id: \", horarioId)\r\n    await axios.delete(`${url}/${horarioId}`);\r\n  } catch (error) {\r\n    console.error(\"Error al eliminar el horario: \", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst horarioService = {\r\n  getHorarios,\r\n  getHorario,\r\n  getHorarioDia,\r\n  createHorario,\r\n  updateHorario,\r\n  deleteHorario,\r\n};\r\n\r\nexport default horarioService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}