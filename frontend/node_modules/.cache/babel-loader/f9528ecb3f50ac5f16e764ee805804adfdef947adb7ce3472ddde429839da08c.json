{"ast":null,"code":"import axios from \"axios\";\nconst url = \"http://localhost:3001/gestionEscolar/estudiantes\";\nconst getEstudiantes = async () => {\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener los estudiantes: \", error);\n    throw error;\n  }\n};\nconst getEstudiante = async estudianteId => {\n  try {\n    console.log(estudianteId);\n    const response = await axios.get(`${url}/${estudianteId}`);\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // El servidor respondió con un código de estado diferente a 2xx\n      console.error(\"Error response data:\", error.response.data);\n      console.error(\"Error response status:\", error.response.status);\n      console.error(\"Error response headers:\", error.response.headers);\n      return null;\n    } else if (error.request) {\n      // La solicitud fue hecha pero no se recibió respuesta\n      console.error(\"Error request:\", error.request);\n    } else {\n      // Algo sucedió al configurar la solicitud que provocó un error\n      console.error(\"Error message:\", error.message);\n    }\n    throw error;\n  }\n};\n\n//Obtener estudiante por Nombre\nconst getNomEstudiante = async estudianteNombre => {\n  try {\n    const response = await axios.get(`${url}?nombre=${estudianteNombre}`);\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // El servidor respondió con un código de estado diferente a 2xx\n      console.error(\"Error response data:\", error.response.data);\n      console.error(\"Error response status:\", error.response.status);\n      console.error(\"Error response headers:\", error.response.headers);\n      return null;\n    } else if (error.request) {\n      // La solicitud fue hecha pero no se recibió respuesta\n      console.error(\"Error request:\", error.request);\n    } else {\n      // Algo sucedió al configurar la solicitud que provocó un error\n      console.error(\"Error message:\", error.message);\n    }\n    throw error;\n  }\n};\nconst createEstudiante = async estudiante => {\n  try {\n    const response = await axios.post(url, estudiante, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al crear el estudiante: \", error);\n    throw error;\n  }\n};\nconst updateEstudiante = async (id, estudiante) => {\n  try {\n    const response = await axios.put(`${url}/${id}`, estudiante, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al actualizar el estudiante: \", error);\n    throw error;\n  }\n};\nconst deleteEstudiante = async estudianteId => {\n  try {\n    console.log(\"Se intenta eliminar el estudiante con id: \", estudianteId);\n    await axios.delete(`${url}/${estudianteId}`);\n  } catch (error) {\n    console.error(\"Error al eliminar el estudiante: \", error);\n    throw error;\n  }\n};\nconst estudiantesService = {\n  getEstudiantes,\n  getEstudiante,\n  getNomEstudiante,\n  createEstudiante,\n  updateEstudiante,\n  deleteEstudiante\n};\nexport default estudiantesService;","map":{"version":3,"names":["axios","url","getEstudiantes","response","get","data","error","console","getEstudiante","estudianteId","log","status","headers","request","message","getNomEstudiante","estudianteNombre","createEstudiante","estudiante","post","updateEstudiante","id","put","deleteEstudiante","delete","estudiantesService"],"sources":["C:/Mis Archivos/Cursos Programacion/Desarrollo-de-Software-/Fullstack Gestion Escolar/fullstack-gestion-escolar/frontend/src/services/estudiantes.service.js"],"sourcesContent":["import axios from \"axios\";\r\nconst url = \"http://localhost:3001/gestionEscolar/estudiantes\";\r\n\r\nconst getEstudiantes = async () => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al obtener los estudiantes: \", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst getEstudiante = async (estudianteId) => {\r\n  try {\r\n    console.log(estudianteId);\r\n    const response = await axios.get(`${url}/${estudianteId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error.response) {\r\n      // El servidor respondió con un código de estado diferente a 2xx\r\n      console.error(\"Error response data:\", error.response.data);\r\n      console.error(\"Error response status:\", error.response.status);\r\n      console.error(\"Error response headers:\", error.response.headers);\r\n      return null;\r\n    } else if (error.request) {\r\n      // La solicitud fue hecha pero no se recibió respuesta\r\n      console.error(\"Error request:\", error.request);\r\n    } else {\r\n      // Algo sucedió al configurar la solicitud que provocó un error\r\n      console.error(\"Error message:\", error.message);\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\n//Obtener estudiante por Nombre\r\nconst getNomEstudiante = async (estudianteNombre) => {\r\n  try {\r\n    const response = await axios.get(`${url}?nombre=${estudianteNombre}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error.response) {\r\n      // El servidor respondió con un código de estado diferente a 2xx\r\n      console.error(\"Error response data:\", error.response.data);\r\n      console.error(\"Error response status:\", error.response.status);\r\n      console.error(\"Error response headers:\", error.response.headers);\r\n      return null;\r\n    } else if (error.request) {\r\n      // La solicitud fue hecha pero no se recibió respuesta\r\n      console.error(\"Error request:\", error.request);\r\n    } else {\r\n      // Algo sucedió al configurar la solicitud que provocó un error\r\n      console.error(\"Error message:\", error.message);\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst createEstudiante = async (estudiante) => {\r\n  try {\r\n    const response = await axios.post(url, estudiante, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al crear el estudiante: \", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst updateEstudiante = async (id, estudiante) => {\r\n  try {\r\n    const response = await axios.put(`${url}/${id}`, estudiante, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al actualizar el estudiante: \", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst deleteEstudiante = async (estudianteId) => {\r\n  try {\r\n    console.log(\"Se intenta eliminar el estudiante con id: \", estudianteId);\r\n    await axios.delete(`${url}/${estudianteId}`);\r\n  } catch (error) {\r\n    console.error(\"Error al eliminar el estudiante: \", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst estudiantesService = {\r\n  getEstudiantes,\r\n  getEstudiante,\r\n  getNomEstudiante,\r\n  createEstudiante,\r\n  updateEstudiante,\r\n  deleteEstudiante,\r\n};\r\n\r\nexport default estudiantesService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}